<?php

namespace App\Actions\Sale;

use App\MarginType;
use App\Sale;
use App\SaleProduct;

class GetWholeSaleMessageAction {

    public function handle(Sale $sale): string {
        $sale->load('products.product.margin_type');
        $sale->load('client');
        $sale->load('store');
        $message = sprintf('–ù–æ–≤–∞—è –æ–ø—Ç–æ–≤–∞—è –ø—Ä–æ–¥–∞–∂–∞ ‚Ññ%süí™üí™üí™', $sale->id);
        $message .= "\n";
        $message .= sprintf('–ö–ª–∏–µ–Ω—Ç: %s', $sale->client->client_name);
        $message .= "\n";
        $message .= sprintf('–ú–∞–≥–∞–∑–∏–Ω: %s', $sale->store->name);
        $message .= "\n";
        $finalPrice = $sale->getFinalPriceAttribute();
        $message .= sprintf('–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞ %s —Ç–µ–Ω–≥–µ', number_format($finalPrice, 0, ' ', ' '));
        $message .= "\n";
        $byMarginTypes = $sale->products
            ->map(function (SaleProduct $saleProduct) {
                $saleProduct['margin_type_id'] = $saleProduct->product->margin_type_id;
                return $saleProduct;
            })
            ->groupBy('margin_type_id')
            ->map(function ($products, $title) {
                return collect($products)->reduce(function ($a, $c) {
                    return $a + $c->final_sale_price;
                }, 0);
            })
            ->toArray();
        $marginTypes = MarginType::all();
        foreach ($marginTypes as $marginType) {
            $total = $byMarginTypes[$marginType['id']] ?? 0;
            $byCategory = number_format(100 * $total / ($finalPrice + $sale->balance), 2);
            $message .= sprintf('–ö–∞—Ç–µ–≥–æ—Ä–∏—è %s - %s', $marginType['title'], $byCategory) . "%";
            $message .= "\n";
        }
        $message .= "<a href='". $sale->getReportURL() ."'>–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑</a>";
        $message .= "\n";
        $message .= "<a href='". $sale->getCancelURL() ."'>–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑‚ùå</a>";
        $message .= "\n";
        $message .= "<a href='". $sale->getConfirmationURL() ."'>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑‚úî</a>";
        $message .= "\n";
        return urlencode($message);
    }
}
